//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ServiceCenterEntities1 : DbContext
    {
        public ServiceCenterEntities1()
            : base("name=ServiceCenterEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Records> Records { get; set; }
        public virtual DbSet<Services> Services { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Works> Works { get; set; }
    
        public virtual int Clients_AUTO_GENERATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Clients_AUTO_GENERATION");
        }
    
        public virtual int Clients_DELETE(Nullable<int> key)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Clients_DELETE", keyParameter);
        }
    
        public virtual int Clients_INSERT(string inSurname, string inName, string inMiddle, Nullable<System.DateTime> inBirhdate, Nullable<decimal> inPhone)
        {
            var inSurnameParameter = inSurname != null ?
                new ObjectParameter("inSurname", inSurname) :
                new ObjectParameter("inSurname", typeof(string));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var inMiddleParameter = inMiddle != null ?
                new ObjectParameter("inMiddle", inMiddle) :
                new ObjectParameter("inMiddle", typeof(string));
    
            var inBirhdateParameter = inBirhdate.HasValue ?
                new ObjectParameter("inBirhdate", inBirhdate) :
                new ObjectParameter("inBirhdate", typeof(System.DateTime));
    
            var inPhoneParameter = inPhone.HasValue ?
                new ObjectParameter("inPhone", inPhone) :
                new ObjectParameter("inPhone", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Clients_INSERT", inSurnameParameter, inNameParameter, inMiddleParameter, inBirhdateParameter, inPhoneParameter);
        }
    
        public virtual ObjectResult<Clients_SELECT_Result> Clients_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clients_SELECT_Result>("Clients_SELECT");
        }
    
        public virtual int Clients_UPDATE(Nullable<int> inId, string inSurname, string inName, string inMiddle, Nullable<System.DateTime> inBirhdate, string inEmail, Nullable<decimal> inPhone)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            var inSurnameParameter = inSurname != null ?
                new ObjectParameter("inSurname", inSurname) :
                new ObjectParameter("inSurname", typeof(string));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var inMiddleParameter = inMiddle != null ?
                new ObjectParameter("inMiddle", inMiddle) :
                new ObjectParameter("inMiddle", typeof(string));
    
            var inBirhdateParameter = inBirhdate.HasValue ?
                new ObjectParameter("inBirhdate", inBirhdate) :
                new ObjectParameter("inBirhdate", typeof(System.DateTime));
    
            var inEmailParameter = inEmail != null ?
                new ObjectParameter("inEmail", inEmail) :
                new ObjectParameter("inEmail", typeof(string));
    
            var inPhoneParameter = inPhone.HasValue ?
                new ObjectParameter("inPhone", inPhone) :
                new ObjectParameter("inPhone", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Clients_UPDATE", inIdParameter, inSurnameParameter, inNameParameter, inMiddleParameter, inBirhdateParameter, inEmailParameter, inPhoneParameter);
        }
    
        public virtual int Employee_DELETE(Nullable<int> key)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_DELETE", keyParameter);
        }
    
        public virtual int Employee_INSERT(string inSurname, string inName, string inMiddle, Nullable<decimal> inPhone, Nullable<System.DateTime> inBirhdate, string inPost)
        {
            var inSurnameParameter = inSurname != null ?
                new ObjectParameter("inSurname", inSurname) :
                new ObjectParameter("inSurname", typeof(string));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var inMiddleParameter = inMiddle != null ?
                new ObjectParameter("inMiddle", inMiddle) :
                new ObjectParameter("inMiddle", typeof(string));
    
            var inPhoneParameter = inPhone.HasValue ?
                new ObjectParameter("inPhone", inPhone) :
                new ObjectParameter("inPhone", typeof(decimal));
    
            var inBirhdateParameter = inBirhdate.HasValue ?
                new ObjectParameter("inBirhdate", inBirhdate) :
                new ObjectParameter("inBirhdate", typeof(System.DateTime));
    
            var inPostParameter = inPost != null ?
                new ObjectParameter("inPost", inPost) :
                new ObjectParameter("inPost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_INSERT", inSurnameParameter, inNameParameter, inMiddleParameter, inPhoneParameter, inBirhdateParameter, inPostParameter);
        }
    
        public virtual int Employee_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_SELECT");
        }
    
        public virtual int Employee_UPDATE(Nullable<int> inId, string inSurname, string inName, string inMiddle, Nullable<System.DateTime> inBirhdate, string inPost, Nullable<decimal> inPhone)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            var inSurnameParameter = inSurname != null ?
                new ObjectParameter("inSurname", inSurname) :
                new ObjectParameter("inSurname", typeof(string));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var inMiddleParameter = inMiddle != null ?
                new ObjectParameter("inMiddle", inMiddle) :
                new ObjectParameter("inMiddle", typeof(string));
    
            var inBirhdateParameter = inBirhdate.HasValue ?
                new ObjectParameter("inBirhdate", inBirhdate) :
                new ObjectParameter("inBirhdate", typeof(System.DateTime));
    
            var inPostParameter = inPost != null ?
                new ObjectParameter("inPost", inPost) :
                new ObjectParameter("inPost", typeof(string));
    
            var inPhoneParameter = inPhone.HasValue ?
                new ObjectParameter("inPhone", inPhone) :
                new ObjectParameter("inPhone", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_UPDATE", inIdParameter, inSurnameParameter, inNameParameter, inMiddleParameter, inBirhdateParameter, inPostParameter, inPhoneParameter);
        }
    
        public virtual int Employees_AUTO_GENERATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employees_AUTO_GENERATION");
        }
    
        public virtual int Record_DELETE(Nullable<int> key)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Record_DELETE", keyParameter);
        }
    
        public virtual int Record_INSERT(Nullable<int> id_services, Nullable<int> id_Employee, Nullable<int> id_Clients, Nullable<System.DateTime> date, Nullable<System.TimeSpan> time)
        {
            var id_servicesParameter = id_services.HasValue ?
                new ObjectParameter("Id_services", id_services) :
                new ObjectParameter("Id_services", typeof(int));
    
            var id_EmployeeParameter = id_Employee.HasValue ?
                new ObjectParameter("Id_Employee", id_Employee) :
                new ObjectParameter("Id_Employee", typeof(int));
    
            var id_ClientsParameter = id_Clients.HasValue ?
                new ObjectParameter("Id_Clients", id_Clients) :
                new ObjectParameter("Id_Clients", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Record_INSERT", id_servicesParameter, id_EmployeeParameter, id_ClientsParameter, dateParameter, timeParameter);
        }
    
        public virtual ObjectResult<Record_SELECT_Result> Record_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Record_SELECT_Result>("Record_SELECT");
        }
    
        public virtual int Record_UPDATE(Nullable<int> id, Nullable<int> id_services, Nullable<int> id_Employee, Nullable<int> id_Clients, Nullable<System.DateTime> date, Nullable<System.TimeSpan> time)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var id_servicesParameter = id_services.HasValue ?
                new ObjectParameter("Id_services", id_services) :
                new ObjectParameter("Id_services", typeof(int));
    
            var id_EmployeeParameter = id_Employee.HasValue ?
                new ObjectParameter("Id_Employee", id_Employee) :
                new ObjectParameter("Id_Employee", typeof(int));
    
            var id_ClientsParameter = id_Clients.HasValue ?
                new ObjectParameter("Id_Clients", id_Clients) :
                new ObjectParameter("Id_Clients", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Record_UPDATE", idParameter, id_servicesParameter, id_EmployeeParameter, id_ClientsParameter, dateParameter, timeParameter);
        }
    
        public virtual int Records_AUTO_GENERATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Records_AUTO_GENERATION");
        }
    
        public virtual int Services_DELETE(Nullable<int> key)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Services_DELETE", keyParameter);
        }
    
        public virtual int Services_INSERT(string name, Nullable<int> price)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Services_INSERT", nameParameter, priceParameter);
        }
    
        public virtual ObjectResult<Services_SELECT_Result> Services_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Services_SELECT_Result>("Services_SELECT");
        }
    
        public virtual int Services_UPDATE(Nullable<int> id, string name, Nullable<int> price)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Services_UPDATE", idParameter, nameParameter, priceParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP1_Result> SP1(Nullable<System.DateTime> day)
        {
            var dayParameter = day.HasValue ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP1_Result>("SP1", dayParameter);
        }
    
        public virtual ObjectResult<SP2_Result> SP2(string letter)
        {
            var letterParameter = letter != null ?
                new ObjectParameter("letter", letter) :
                new ObjectParameter("letter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP2_Result>("SP2", letterParameter);
        }
    
        public virtual int Work_DELETE(Nullable<int> key)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Work_DELETE", keyParameter);
        }
    
        public virtual int Work_INSERT(Nullable<int> id_services, Nullable<int> id_Employee, Nullable<int> id_Clients, Nullable<System.DateTime> date, Nullable<System.TimeSpan> time, Nullable<double> income)
        {
            var id_servicesParameter = id_services.HasValue ?
                new ObjectParameter("Id_services", id_services) :
                new ObjectParameter("Id_services", typeof(int));
    
            var id_EmployeeParameter = id_Employee.HasValue ?
                new ObjectParameter("Id_Employee", id_Employee) :
                new ObjectParameter("Id_Employee", typeof(int));
    
            var id_ClientsParameter = id_Clients.HasValue ?
                new ObjectParameter("Id_Clients", id_Clients) :
                new ObjectParameter("Id_Clients", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var incomeParameter = income.HasValue ?
                new ObjectParameter("Income", income) :
                new ObjectParameter("Income", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Work_INSERT", id_servicesParameter, id_EmployeeParameter, id_ClientsParameter, dateParameter, timeParameter, incomeParameter);
        }
    
        public virtual ObjectResult<Work_SELECT_Result> Work_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Work_SELECT_Result>("Work_SELECT");
        }
    
        public virtual int Work_UPDATE(Nullable<int> id, Nullable<int> id_services, Nullable<int> id_Employee, Nullable<int> id_Clients, Nullable<System.DateTime> date, Nullable<System.TimeSpan> time, Nullable<double> income)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var id_servicesParameter = id_services.HasValue ?
                new ObjectParameter("Id_services", id_services) :
                new ObjectParameter("Id_services", typeof(int));
    
            var id_EmployeeParameter = id_Employee.HasValue ?
                new ObjectParameter("Id_Employee", id_Employee) :
                new ObjectParameter("Id_Employee", typeof(int));
    
            var id_ClientsParameter = id_Clients.HasValue ?
                new ObjectParameter("Id_Clients", id_Clients) :
                new ObjectParameter("Id_Clients", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var incomeParameter = income.HasValue ?
                new ObjectParameter("Income", income) :
                new ObjectParameter("Income", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Work_UPDATE", idParameter, id_servicesParameter, id_EmployeeParameter, id_ClientsParameter, dateParameter, timeParameter, incomeParameter);
        }
    
        public virtual ObjectResult<Works_AUTO_GENERATION_Result> Works_AUTO_GENERATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Works_AUTO_GENERATION_Result>("Works_AUTO_GENERATION");
        }
    }
}
